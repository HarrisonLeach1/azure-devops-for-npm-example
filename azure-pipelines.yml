trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm ci
    npm run build
  displayName: 'npm ci and build'
  env:
    CI: true

- script: npm test -- --coverage --ci --reporters=default --reporters=jest-junit --coverageReporters=cobertura
  displayName: "npm test"
  env:
    CI: true

- task: PublishTestResults@2
  displayName: "Publish Test Results"
  inputs:
    testResultsFiles: junit.xml
    mergeTestResults: true
  condition: succeededOrFailed()

- task: PublishCodeCoverageResults@1
  displayName: "Publish code coverage"
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: "$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml"
    reportDirectory: "$(System.DefaultWorkingDirectory)/coverage"
    failIfCoverageEmpty: true

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'pack'
  displayName: 'npm pack'
    
- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: '*.tgz' 
    targetFolder: $(Build.ArtifactStagingDirectory)/build
  displayName: 'Copy npm package'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: 'package.json' 
    targetFolder: $(Build.ArtifactStagingDirectory)/build
  displayName: 'Copy package.json'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/build'
    artifactName: npm
  displayName: 'Publish npm artifact'